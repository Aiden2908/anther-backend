generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  password      String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  lastActiveAt  DateTime       @default(now())
  users_details users_details?
}

model ethinicities {
  id          Int     @id @default(autoincrement())
  ethinicitiy String?
  popularity  Int?
}

model professions {
  id         Int     @id @default(autoincrement())
  profession String?
}

model users_details {
  id                 Int                               @unique
  display_name       String?
  sex                users_details_sex?
  sexual_orientation users_details_sexual_orientation?
  purpose            users_details_purpose?
  dob                DateTime?
  relation_status    users_details_relation_status?
  interests          String?
  school_name        String?
  school_major       String?
  school_graduated   Boolean?
  profession         String?
  workplace_name     String?
  drinking_habbit    users_details_drinking_habbit?
  smoking_habbit     users_details_smoking_habbit?
  height             Float?
  height_unit        users_details_height_unit?
  about_you          String?
  kids               users_details_kids?
  photos             String?                           @default("{\"profile\": null,\"maxPhotos\": 8,\"photoArray\": []}")
  completion         Boolean?
  users              users                             @relation(fields: [id], references: [id])
}

model interests {
  id         Int     @id @default(autoincrement())
  interest   String?
  popularity Int?
  color      String?
}

enum users_details_sex {
  M
  F
}

enum users_details_sexual_orientation {
  Straight
  Gay
  Lesbian
  Bisexual
  Asexual
  Transexual
  Pansexual
  Questioning
  Other
}

enum users_details_relation_status {
  Single
  Open
  Taken
  Complicated
  void
}

enum users_details_kids {
  Want_them_someday
  Don__t_want_kids @map("Don''t_want_kids")
  Already_have_kids
  Haven__t_decided_yet @map("Haven''t_decided_yet")
  void
}

enum users_details_purpose {
  date
  chat_and_meet_new_people
  see_what_happens
}

enum users_details_drinking_habbit {
  A_drinker
  Not_a_drinker
  A_occasional_drinker
  void
}

enum users_details_smoking_habbit {
  A_smoker
  Not_a_smoker
  void
}

enum users_details_height_unit {
  cm
  ft
}
